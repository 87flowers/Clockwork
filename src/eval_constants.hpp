#pragma once

#include "eval_types.hpp"

namespace Clockwork {

// clang-format off
inline const PScore PAWN_MAT   = S(164, 154);
inline const PScore KNIGHT_MAT = S(641, 692);
inline const PScore BISHOP_MAT = S(733, 639);
inline const PScore ROOK_MAT   = S(897, 993);
inline const PScore QUEEN_MAT  = S(2020, 1474);
inline const PScore TEMPO_VAL  = S(47, 15);

inline const PScore BISHOP_PAIR_VAL  = S(63, 190);
inline const PScore DOUBLED_PAWN_VAL = S(-48, -78);

inline const PScore POTENTIAL_CHECKER_VAL = S(-75, 0);

inline const std::array<PScore, 6> PAWN_PHALANX = {
    S(0, 21), S(53, 28), S(83, 71), S(189, 147), S(466, 573), S(1373, 1456),
};
inline const std::array<PScore, 5> DEFENDED_PAWN = {
    S(48, 47), S(51, 21), S(55, 37), S(103, 112), S(637, -124),
};
inline const std::array<PScore, 6> PASSED_PAWN = {
    S(-1, 4), S(-26, 38), S(-28, 89), S(44, 140), S(73, 246), S(175, 355),
};

inline const std::array<PScore, 9> KNIGHT_MOBILITY = {
    S(-23, 11), S(82, 71), S(137, 168), S(188, 194), S(235, 216), S(256, 261), S(288, 259), S(313, 258), S(363, 177),
};
inline const std::array<PScore, 14> BISHOP_MOBILITY = {
    S(17, 4), S(67, 97), S(126, 160), S(139, 218), S(176, 249), S(187, 273), S(210, 283), S(219, 294), S(226, 305), S(228, 302), S(253, 291), S(311, 238), S(357, 219), S(428, 187),
};
inline const std::array<PScore, 15> ROOK_MOBILITY = {
    S(54, 128), S(171, 359), S(214, 433), S(234, 430), S(249, 465), S(264, 481), S(282, 489), S(310, 485), S(336, 495), S(363, 503), S(388, 503), S(400, 509), S(445, 495), S(430, 497), S(529, 403),
};
inline const std::array<PScore, 28> QUEEN_MOBILITY = {
    S(10, 5), S(480, 440), S(503, 655), S(544, 916), S(586, 863), S(620, 911), S(586, 1113), S(610, 1082), S(623, 1114), S(626, 1141), S(635, 1161), S(636, 1195), S(659, 1180), S(672, 1178), S(681, 1179), S(693, 1174), S(680, 1197), S(703, 1158), S(719, 1144), S(752, 1089), S(795, 1041), S(837, 971), S(930, 896), S(1116, 711), S(1082, 698), S(1293, 649), S(1131, 683), S(1040, 689),
};
inline const std::array<PScore, 9> KING_MOBILITY = {
    S(378, 326), S(83, -38), S(13, 9), S(14, 38), S(-6, 29), S(-30, 10), S(-14, 17), S(-5, -13), S(45, -136),
};

inline const std::array<PScore, 3> KNIGHT_KING_RING = {
    CS(0, 0), S(86, -39), S(152, -91),
};
inline const std::array<PScore, 3> BISHOP_KING_RING = {
    CS(0, 0), S(27, -1), S(137, -43),
};
inline const std::array<PScore, 5> ROOK_KING_RING = {
    CS(0, 0), S(67, -64), S(87, -80), S(137, -77), S(146, -126),
};
inline const std::array<PScore, 6> QUEEN_KING_RING = {
    CS(0, 0), S(-57, 44), S(-79, 62), S(-6, -5), S(149, -89), S(344, -199),
};

inline const PScore PAWN_THREAT_KNIGHT = S(209, 68);
inline const PScore PAWN_THREAT_BISHOP = S(177, 80);
inline const PScore PAWN_THREAT_ROOK   = S(175, 49);
inline const PScore PAWN_THREAT_QUEEN  = S(146, -76);

inline const PScore KNIGHT_THREAT_BISHOP = S(83, 69);
inline const PScore KNIGHT_THREAT_ROOK   = S(224, -13);
inline const PScore KNIGHT_THREAT_QUEEN  = S(133, -73);

inline const PScore BISHOP_THREAT_KNIGHT = S(82, 22);
inline const PScore BISHOP_THREAT_ROOK   = S(208, 42);
inline const PScore BISHOP_THREAT_QUEEN  = S(173, 30);

inline const std::array<PScore, 48> PAWN_PSQT = {
    S(-151, 469),   S(-15, 473),    S(128, 419),    S(282, 197),    S(232, 214),    S(248, 309),    S(125, 348),    S(188, 334),    //
    S(132, 285),    S(295, 307),    S(232, 226),    S(266, 118),    S(190, 116),    S(132, 203),    S(87, 281),     S(65, 272),     //
    S(74, 223),     S(87, 231),     S(88, 183),     S(78, 151),     S(66, 151),     S(21, 156),     S(6, 227),      S(-14, 247),    //
    S(80, 147),     S(99, 187),     S(65, 142),     S(64, 140),     S(45, 130),     S(13, 151),     S(-25, 222),    S(-36, 201),    //
    S(85, 113),     S(147, 118),    S(86, 157),     S(25, 174),     S(32, 153),     S(-16, 157),    S(-23, 184),    S(-54, 182),    //
    S(90, 112),     S(243, 114),    S(159, 155),    S(61, 195),     S(42, 141),     S(18, 162),     S(2, 205),      S(-31, 187),    //
};
inline const std::array<PScore, 64> KNIGHT_PSQT = {
    S(-278, -48),   S(36, 37),      S(-437, 426),   S(65, 175),     S(-213, 267),   S(-235, 289),   S(-286, 93),    S(-407, 156),   //
    S(172, 92),     S(204, 177),    S(320, 58),     S(153, 185),    S(208, 162),    S(164, 115),    S(84, 133),     S(137, 70),     //
    S(158, 138),    S(118, 237),    S(335, 175),    S(211, 211),    S(258, 174),    S(154, 179),    S(154, 145),    S(60, 123),     //
    S(234, 153),    S(161, 209),    S(207, 212),    S(193, 227),    S(203, 192),    S(194, 189),    S(126, 139),    S(137, 155),    //
    S(202, 139),    S(228, 145),    S(205, 179),    S(169, 176),    S(174, 184),    S(174, 187),    S(131, 143),    S(145, 52),     //
    S(125, 83),     S(152, 77),     S(135, 85),     S(158, 154),    S(174, 149),    S(90, 111),     S(96, 96),      S(59, 91),      //
    S(141, 179),    S(168, 86),     S(114, 91),     S(109, 118),    S(102, 104),    S(80, 76),      S(99, 54),      S(9, -5),       //
    S(79, 95),      S(120, 82),     S(178, 9),      S(158, 78),     S(191, 61),     S(125, -35),    S(72, 66),      S(-42, 60),     //
};
inline const std::array<PScore, 64> BISHOP_PSQT = {
    S(-19, 261),    S(45, 181),     S(-454, 283),   S(-190, 275),   S(-225, 294),   S(-329, 297),   S(84, 234),     S(76, 211),     //
    S(103, 119),    S(88, 233),     S(115, 213),    S(119, 171),    S(105, 196),    S(96, 211),     S(88, 197),     S(30, 204),     //
    S(105, 232),    S(156, 233),    S(355, 196),    S(216, 195),    S(168, 206),    S(112, 242),    S(227, 183),    S(97, 240),     //
    S(117, 175),    S(120, 229),    S(217, 199),    S(213, 217),    S(222, 218),    S(144, 235),    S(130, 209),    S(51, 221),     //
    S(117, 139),    S(131, 197),    S(152, 193),    S(171, 216),    S(171, 248),    S(118, 227),    S(120, 172),    S(110, 107),    //
    S(154, 131),    S(202, 152),    S(200, 155),    S(127, 212),    S(119, 221),    S(107, 229),    S(172, 159),    S(129, 109),    //
    S(121, 101),    S(201, 123),    S(146, 134),    S(126, 172),    S(117, 143),    S(146, 131),    S(93, 164),     S(155, 47),     //
    S(140, 153),    S(114, 165),    S(108, 175),    S(115, 115),    S(98, 120),     S(122, 156),    S(128, 90),     S(52, 174),     //
};
inline const std::array<PScore, 64> ROOK_PSQT = {
    S(422, 373),    S(516, 376),    S(414, 418),    S(390, 429),    S(418, 400),    S(373, 403),    S(395, 401),    S(404, 402),    //
    S(433, 412),    S(481, 407),    S(554, 384),    S(466, 439),    S(464, 435),    S(378, 454),    S(342, 451),    S(361, 442),    //
    S(348, 417),    S(609, 350),    S(562, 362),    S(570, 346),    S(476, 381),    S(388, 419),    S(437, 389),    S(294, 434),    //
    S(319, 399),    S(361, 398),    S(396, 388),    S(445, 333),    S(411, 361),    S(347, 424),    S(326, 413),    S(234, 416),    //
    S(197, 352),    S(334, 340),    S(302, 371),    S(305, 367),    S(299, 362),    S(262, 420),    S(216, 419),    S(195, 400),    //
    S(210, 336),    S(325, 258),    S(293, 310),    S(261, 329),    S(294, 306),    S(204, 373),    S(201, 356),    S(195, 343),    //
    S(152, 361),    S(232, 292),    S(274, 286),    S(278, 301),    S(263, 318),    S(252, 321),    S(199, 308),    S(190, 309),    //
    S(183, 341),    S(216, 352),    S(255, 315),    S(290, 300),    S(278, 320),    S(270, 315),    S(251, 302),    S(221, 321),    //
};
inline const std::array<PScore, 64> QUEEN_PSQT = {
    S(502, 778),    S(533, 733),    S(564, 748),    S(387, 903),    S(466, 807),    S(396, 857),    S(499, 740),    S(429, 736),    //
    S(543, 766),    S(359, 957),    S(399, 1011),   S(302, 1033),   S(350, 954),    S(302, 976),    S(380, 842),    S(442, 739),    //
    S(420, 877),    S(544, 863),    S(503, 908),    S(436, 964),    S(414, 911),    S(372, 924),    S(460, 800),    S(440, 721),    //
    S(501, 772),    S(480, 858),    S(471, 871),    S(447, 938),    S(440, 917),    S(453, 820),    S(454, 758),    S(426, 758),    //
    S(477, 795),    S(506, 774),    S(476, 841),    S(445, 878),    S(423, 892),    S(427, 845),    S(439, 733),    S(433, 683),    //
    S(511, 569),    S(507, 686),    S(492, 763),    S(412, 829),    S(457, 752),    S(449, 756),    S(476, 650),    S(445, 661),    //
    S(498, 465),    S(491, 407),    S(467, 585),    S(489, 666),    S(443, 708),    S(491, 583),    S(475, 651),    S(429, 680),    //
    S(363, 663),    S(363, 385),    S(429, 421),    S(459, 503),    S(486, 595),    S(508, 501),    S(483, 551),    S(425, 653),    //
};
inline const std::array<PScore, 64> KING_PSQT = {
    S(301, -623),   S(232, -97),    S(-88, 18),     S(-209, 85),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(330, -132),   S(-12, 166),    S(-71, 194),    S(253, 107),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-59, 70),     S(76, 181),     S(141, 148),    S(195, 87),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-259, 91),    S(-44, 158),    S(100, 146),    S(73, 109),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-236, 33),    S(-69, 106),    S(2, 108),      S(-69, 156),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-181, -4),    S(32, 24),      S(-67, 92),     S(-118, 140),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(46, -89),     S(87, -16),     S(-27, 54),     S(-142, 117),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-63, -153),   S(38, -110),    S(-91, -64),    S(-60, -92),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
};
// clang-format on

}
