#pragma once

#include "eval_types.hpp"

namespace Clockwork {

// clang-format off
//Epoch 10/1000
//[========================================] 100% (8/8)
inline const PScore PAWN_MAT   = S(137, 97);
inline const PScore KNIGHT_MAT = S(690, 804);
inline const PScore BISHOP_MAT = S(747, 663);
inline const PScore ROOK_MAT   = S(912, 913);
inline const PScore QUEEN_MAT  = S(2000, 1406);
inline const PScore TEMPO_VAL  = S(48, 15);

inline const PScore BISHOP_PAIR_VAL  = S(63, 184);
inline const PScore DOUBLED_PAWN_VAL = S(-43, -76);

inline const PScore POTENTIAL_CHECKER_VAL = S(-78, 5);

inline const std::array<PScore, 6> PAWN_PHALANX = {
    S(1, 20), S(47, 18), S(88, 82), S(181, 158), S(526, 562), S(1458, 1556),
};
inline const std::array<PScore, 5> DEFENDED_PAWN = {
    S(45, 46), S(41, 10), S(57, 44), S(96, 123), S(606, -88),
};
inline const std::array<PScore, 6> PASSED_PAWN = {
    S(3, 2), S(-21, 31), S(-27, 81), S(42, 134), S(69, 243), S(190, 403),
};

inline const std::array<PScore, 9> KNIGHT_MOBILITY = {
    S(-44, 2), S(87, 36), S(133, 128), S(178, 155), S(227, 177), S(262, 217), S(288, 220), S(311, 213), S(357, 136),
};
inline const std::array<PScore, 14> BISHOP_MOBILITY = {
    S(37, -35), S(90, 85), S(130, 145), S(145, 195), S(190, 241), S(191, 259), S(211, 261), S(222, 282), S(227, 283), S(237, 294), S(271, 282), S(301, 225), S(349, 212), S(420, 202),
};
inline const std::array<PScore, 15> ROOK_MOBILITY = {
    S(79, 223), S(192, 461), S(243, 537), S(261, 524), S(283, 572), S(292, 582), S(312, 594), S(339, 581), S(369, 606), S(395, 603), S(407, 605), S(432, 613), S(463, 597), S(466, 601), S(550, 510),
};
inline const std::array<PScore, 28> QUEEN_MOBILITY = {
    S(0, 0), S(648, 297), S(567, 681), S(579, 1107), S(606, 1093), S(669, 1120), S(624, 1326), S(642, 1270), S(636, 1311), S(651, 1345), S(656, 1362), S(672, 1395), S(681, 1386), S(712, 1387), S(697, 1380), S(725, 1378), S(708, 1398), S(724, 1352), S(736, 1371), S(776, 1304), S(817, 1253), S(856, 1180), S(984, 1065), S(1126, 949), S(1137, 900), S(1358, 866), S(1154, 894), S(1095, 922),
};
inline const std::array<PScore, 9> KING_MOBILITY = {
    S(398, 393), S(81, 9), S(27, 62), S(25, 88), S(12, 76), S(-19, 54), S(2, 53), S(11, 25), S(77, -99),
};

inline const std::array<PScore, 3> KNIGHT_KING_RING = {
    CS(0, 0), S(94, -37), S(159, -90),
};
inline const std::array<PScore, 3> BISHOP_KING_RING = {
    CS(0, 0), S(18, -1), S(132, -39),
};
inline const std::array<PScore, 5> ROOK_KING_RING = {
    CS(0, 0), S(66, -66), S(80, -77), S(131, -69), S(138, -125),
};
inline const std::array<PScore, 6> QUEEN_KING_RING = {
    CS(0, 0), S(-56, 41), S(-94, 74), S(-37, 27), S(92, -30), S(266, -124),
};

inline const PScore PAWN_THREAT_KNIGHT = S(182, 75);
inline const PScore PAWN_THREAT_BISHOP = S(168, 62);
inline const PScore PAWN_THREAT_ROOK   = S(140, 42);
inline const PScore PAWN_THREAT_QUEEN  = S(119, -63);

inline const PScore KNIGHT_THREAT_BISHOP = S(83, 64);
inline const PScore KNIGHT_THREAT_ROOK   = S(203, -14);
inline const PScore KNIGHT_THREAT_QUEEN  = S(159, -78);

inline const PScore BISHOP_THREAT_KNIGHT = S(78, 24);
inline const PScore BISHOP_THREAT_ROOK   = S(190, 29);
inline const PScore BISHOP_THREAT_QUEEN  = S(188, 48);

inline const std::array<PScore, 48> PAWN_PSQT = {
    S(-135, 508),   S(-19, 518),    S(158, 441),    S(325, 209),    S(271, 232),    S(291, 324),    S(153, 361),    S(206, 367),    //
    S(163, 370),    S(339, 398),    S(262, 306),    S(295, 200),    S(224, 205),    S(163, 276),    S(116, 354),    S(86, 345),     //
    S(95, 295),     S(126, 315),    S(117, 266),    S(104, 224),    S(88, 223),     S(56, 227),     S(40, 301),     S(7, 332),      //
    S(102, 221),    S(130, 259),    S(101, 208),    S(92, 205),     S(70, 206),     S(34, 222),     S(4, 294),      S(-7, 263),     //
    S(103, 186),    S(169, 188),    S(118, 234),    S(61, 241),     S(60, 219),     S(12, 222),     S(21, 255),     S(-41, 241),    //
    S(124, 181),    S(276, 188),    S(189, 229),    S(97, 270),     S(62, 222),     S(45, 232),     S(37, 278),     S(-7, 261),     //
};
inline const std::array<PScore, 64> KNIGHT_PSQT = {
    S(-294, -87),   S(-2, 19),      S(-456, 415),   S(70, 137),     S(-266, 230),   S(-225, 253),   S(-377, 91),    S(-471, 129),   //
    S(175, 59),     S(227, 120),    S(345, 14),     S(161, 166),    S(216, 135),    S(160, 109),    S(107, 120),    S(129, 25),     //
    S(154, 101),    S(103, 214),    S(331, 152),    S(197, 186),    S(272, 144),    S(165, 152),    S(177, 105),    S(70, 80),      //
    S(232, 148),    S(152, 170),    S(211, 195),    S(185, 200),    S(186, 161),    S(202, 162),    S(119, 111),    S(121, 109),    //
    S(210, 112),    S(234, 116),    S(212, 161),    S(178, 169),    S(190, 189),    S(155, 151),    S(131, 93),     S(145, 0),      //
    S(127, 65),     S(140, 39),     S(132, 56),     S(153, 132),    S(177, 125),    S(89, 86),      S(108, 79),     S(55, 64),      //
    S(133, 139),    S(183, 44),     S(143, 60),     S(115, 87),     S(109, 83),     S(78, 39),      S(105, 15),     S(-4, -48),     //
    S(91, 39),      S(124, 54),     S(186, -30),    S(137, 42),     S(198, 38),     S(136, -82),    S(77, 22),      S(-33, 10),     //
};
inline const std::array<PScore, 64> BISHOP_PSQT = {
    S(37, 313),     S(42, 202),     S(-443, 326),   S(-177, 319),   S(-215, 326),   S(-262, 329),   S(74, 272),     S(80, 240),     //
    S(146, 138),    S(111, 265),    S(119, 263),    S(153, 198),    S(130, 216),    S(126, 259),    S(86, 238),     S(56, 235),     //
    S(120, 279),    S(187, 277),    S(381, 220),    S(239, 230),    S(188, 234),    S(110, 283),    S(231, 235),    S(97, 279),     //
    S(128, 210),    S(149, 271),    S(229, 234),    S(233, 249),    S(229, 244),    S(159, 278),    S(153, 226),    S(89, 262),     //
    S(126, 180),    S(156, 245),    S(141, 234),    S(195, 252),    S(173, 271),    S(120, 255),    S(164, 209),    S(127, 129),    //
    S(162, 165),    S(220, 191),    S(204, 186),    S(134, 238),    S(131, 244),    S(114, 266),    S(179, 189),    S(142, 115),    //
    S(156, 147),    S(202, 160),    S(143, 151),    S(111, 208),    S(130, 175),    S(165, 157),    S(93, 194),     S(164, 51),     //
    S(156, 180),    S(126, 184),    S(120, 199),    S(120, 156),    S(115, 146),    S(135, 188),    S(144, 146),    S(64, 214),     //
};
inline const std::array<PScore, 64> ROOK_PSQT = {
    S(387, 413),    S(466, 441),    S(414, 477),    S(370, 489),    S(427, 446),    S(362, 451),    S(410, 460),    S(412, 448),    //
    S(411, 467),    S(479, 466),    S(545, 444),    S(473, 490),    S(447, 490),    S(388, 511),    S(340, 502),    S(364, 489),    //
    S(369, 478),    S(601, 413),    S(556, 420),    S(580, 403),    S(484, 430),    S(400, 468),    S(448, 438),    S(295, 494),    //
    S(329, 447),    S(352, 435),    S(405, 457),    S(434, 391),    S(402, 415),    S(332, 455),    S(331, 480),    S(237, 467),    //
    S(214, 443),    S(327, 424),    S(283, 409),    S(276, 425),    S(314, 425),    S(277, 465),    S(197, 452),    S(187, 447),    //
    S(186, 366),    S(325, 359),    S(295, 369),    S(249, 391),    S(314, 365),    S(202, 445),    S(206, 404),    S(215, 400),    //
    S(143, 422),    S(231, 358),    S(279, 341),    S(276, 346),    S(266, 373),    S(244, 373),    S(187, 348),    S(180, 357),    //
    S(178, 394),    S(203, 386),    S(253, 378),    S(286, 357),    S(279, 368),    S(249, 347),    S(247, 344),    S(220, 366),    //
};
inline const std::array<PScore, 64> QUEEN_PSQT = {
    S(525, 865),    S(539, 826),    S(552, 838),    S(386, 989),    S(469, 895),    S(405, 922),    S(507, 830),    S(444, 811),    //
    S(541, 843),    S(351, 1047),   S(385, 1123),   S(325, 1088),   S(335, 1054),   S(288, 1071),   S(383, 942),    S(425, 790),    //
    S(424, 975),    S(559, 951),    S(502, 999),    S(406, 1082),   S(419, 994),    S(371, 1019),   S(463, 904),    S(436, 795),    //
    S(498, 885),    S(451, 953),    S(469, 974),    S(441, 1040),   S(434, 1007),   S(419, 928),    S(455, 855),    S(428, 855),    //
    S(468, 887),    S(464, 853),    S(471, 921),    S(466, 976),    S(437, 976),    S(397, 912),    S(465, 858),    S(433, 775),    //
    S(510, 659),    S(499, 765),    S(486, 856),    S(424, 927),    S(464, 842),    S(415, 849),    S(463, 731),    S(449, 755),    //
    S(506, 534),    S(482, 500),    S(455, 671),    S(488, 759),    S(439, 815),    S(486, 666),    S(482, 771),    S(434, 780),    //
    S(343, 767),    S(347, 469),    S(409, 509),    S(449, 608),    S(476, 677),    S(508, 559),    S(483, 598),    S(438, 693),    //
};
inline const std::array<PScore, 64> KING_PSQT = {
    S(146, -672),   S(142, -98),    S(-56, -23),    S(-173, 54),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(329, -170),   S(13, 145),     S(-99, 170),    S(292, 72),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-54, 56),     S(66, 169),     S(123, 137),    S(217, 65),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-264, 104),   S(-57, 142),    S(84, 129),     S(66, 95),      S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-251, 18),    S(-99, 97),     S(-37, 119),    S(-80, 129),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-195, -19),   S(4, 15),       S(-99, 84),     S(-149, 118),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(30, -98),     S(56, -23),     S(-60, 52),     S(-180, 105),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-97, -167),   S(13, -122),    S(-121, -78),   S(-87, -108),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
};
// Average batch loss: 0.0737775
// clang-format on

}
