#pragma once

#include "eval_types.hpp"

namespace Clockwork {

// clang-format off

inline const PScore PAWN_MAT   = S(287, 531);
inline const PScore KNIGHT_MAT = S(855, 1013);
inline const PScore BISHOP_MAT = S(875, 1105);
inline const PScore ROOK_MAT   = S(1295, 1791);
inline const PScore QUEEN_MAT  = S(2820, 3277);
inline const PScore TEMPO_VAL  = S(28, 15);

inline const PScore BISHOP_PAIR_VAL  = S(53, 211);
inline const PScore DOUBLED_PAWN_VAL = S(-71, -117);

inline const std::array<PScore, 9> KNIGHT_MOBILITY = {
    S(-182, -54), S(-136, -139), S(-83, -46), S(-43, -9), S(0, 8), S(25, 51), S(54, 52), S(88, 44), S(135, -29),
};
inline const std::array<PScore, 14> BISHOP_MOBILITY = {
    S(-206, -130), S(-133, -184), S(-69, -144), S(-49, -84), S(-10, -46), S(7, -21), S(36, -20), S(45, -7), S(54, 8), S(50, 6), S(76, 0), S(169, -71), S(183, -103), S(287, -158),
};
inline const std::array<PScore, 15> ROOK_MOBILITY = {
    S(-45, -421), S(-116, -75), S(-68, -42), S(-53, -21), S(-35, -4), S(-22, 3), S(-3, 22), S(27, 17), S(59, 17), S(82, 37), S(110, 29), S(123, 40), S(179, 25), S(144, 40), S(273, -73),
};
inline const std::array<PScore, 28> QUEEN_MOBILITY = {
    S(-370, 20), S(-322, 112), S(-274, -61), S(-199, -208), S(-136, -323), S(-112, -261), S(-143, -49), S(-112, -77), S(-94, -50), S(-80, -33), S(-85, 17), S(-73, 41), S(-44, 34), S(-38, 41), S(-19, 38), S(-23, 56), S(-28, 91), S(-3, 53), S(8, 34), S(56, -22), S(96, -61), S(150, -123), S(137, -111), S(446, -418), S(404, -411), S(1046, -724), S(618, -430), S(1461, -1057),
};
inline const std::array<PScore, 9> KING_MOBILITY = {
    S(396, 759), S(139, 435), S(26, 478), S(20, 505), S(-6, 492), S(-30, 467), S(-33, 478), S(-18, 447), S(86, 315),
};

inline const std::array<PScore, 3> KNIGHT_KING_RING = {
    CS(0, 0), S(87, -41), S(127, -89),
};
inline const std::array<PScore, 3> BISHOP_KING_RING = {
    CS(0, 0), S(61, -10), S(149, -51),
};
inline const std::array<PScore, 5> ROOK_KING_RING = {
    CS(0, 0), S(67, -71), S(178, -92), S(246, -94), S(363, -153),
};
inline const std::array<PScore, 6> QUEEN_KING_RING = {
    CS(0, 0), S(-2, 40), S(95, 48), S(266, -20), S(574, -107), S(854, -247),
};

inline const std::array<PScore, 48> PAWN_PSQT = {
    S(-164, 443),   S(57, 402),     S(122, 431),    S(258, 210),    S(198, 224),    S(249, 319),    S(108, 344),    S(185, 326),    //
    S(-36, 102),    S(127, 160),    S(87, 54),      S(186, -16),    S(110, -8),     S(15, 47),      S(-45, 94),     S(-93, 51),     //
    S(-74, -60),    S(-41, -52),    S(-43, -104),   S(-37, -144),   S(-49, -123),   S(-97, -126),   S(-126, -58),   S(-161, -39),   //
    S(-60, -165),   S(-6, -128),    S(-46, -173),   S(-64, -164),   S(-61, -187),   S(-108, -171),  S(-150, -92),   S(-185, -108),  //
    S(-22, -202),   S(80, -193),    S(-10, -164),   S(-63, -145),   S(-81, -151),   S(-131, -155),  S(-134, -117),  S(-184, -130),  //
    S(-68, -200),   S(131, -212),   S(36, -176),    S(-76, -120),   S(-96, -178),   S(-135, -146),  S(-142, -104),  S(-186, -124),  //
};
inline const std::array<PScore, 64> KNIGHT_PSQT = {
    S(-337, -151),  S(-14, -120),   S(-531, 264),   S(4, 65),       S(-236, 136),   S(-297, 160),   S(-235, -51),   S(-404, -21),   //
    S(63, -68),     S(65, 82),      S(217, -29),    S(61, 57),      S(143, 65),     S(131, -47),    S(-6, -17),     S(72, -86),     //
    S(24, 49),      S(67, 129),     S(236, 102),    S(153, 78),     S(135, 89),     S(65, 68),      S(11, 80),      S(-84, 34),     //
    S(116, 23),     S(13, 114),     S(121, 99),     S(51, 122),     S(130, 90),     S(54, 86),      S(-17, 39),     S(-8, 49),      //
    S(53, 26),      S(155, 33),     S(66, 66),      S(59, 73),      S(29, 91),      S(23, 78),      S(-13, 55),     S(-18, -46),    //
    S(-38, -2),     S(1, -17),      S(-29, -5),     S(14, 57),      S(12, 48),      S(-83, 15),     S(-65, -17),    S(-96, -24),    //
    S(6, 22),       S(25, 20),      S(-26, 2),      S(-40, 21),     S(-45, -8),     S(-99, -8),     S(-84, -29),    S(-135, -107),  //
    S(-144, 15),    S(-22, -65),    S(12, -71),     S(26, -31),     S(12, -49),     S(-37, -131),   S(-84, -27),    S(-222, -21),   //
};
inline const std::array<PScore, 64> BISHOP_PSQT = {
    S(-134, 58),    S(-62, 9),      S(-577, 119),   S(-289, 89),    S(-343, 134),   S(-461, 117),   S(-56, 90),     S(17, 63),      //
    S(-53, -16),    S(-53, 87),     S(22, 32),      S(18, 3),       S(-9, 53),      S(-5, 43),      S(-2, 26),      S(-116, 41),    //
    S(-26, 74),     S(31, 71),      S(206, 48),     S(67, 56),      S(42, 57),      S(-15, 84),     S(89, 16),      S(-8, 42),      //
    S(44, -32),     S(14, 48),      S(96, 21),      S(70, 66),      S(113, 36),     S(25, 55),      S(0, 47),       S(-99, 89),     //
    S(35, -50),     S(26, 18),      S(33, 24),      S(59, 59),      S(36, 86),      S(6, 39),       S(-16, 7),      S(-26, -50),    //
    S(63, -25),     S(88, -15),     S(87, -12),     S(17, 52),      S(0, 60),       S(-27, 67),     S(49, -29),     S(17, -53),     //
    S(-5, -47),     S(112, -41),    S(58, -28),     S(7, 12),       S(-11, -10),    S(29, -19),     S(-18, -4),     S(49, -138),    //
    S(3, 41),       S(14, 22),      S(-15, 43),     S(13, -43),     S(-25, -44),    S(9, -11),      S(6, -63),      S(-39, 1),      //
};
inline const std::array<PScore, 64> ROOK_PSQT = {
    S(84, 19),      S(278, -4),     S(-16, 92),     S(-28, 100),    S(36, 60),      S(-49, 91),     S(18, 65),      S(27, 68),      //
    S(149, 33),     S(128, 69),     S(234, 33),     S(96, 114),     S(122, 96),     S(14, 125),     S(-16, 118),    S(20, 103),     //
    S(38, 66),      S(247, 7),      S(215, 24),     S(204, 21),     S(129, 31),     S(40, 98),      S(72, 57),      S(-35, 85),     //
    S(-12, 63),     S(10, 61),      S(49, 61),      S(115, 0),      S(67, 18),      S(-4, 112),     S(-9, 71),      S(-105, 89),    //
    S(-103, -24),   S(27, -35),     S(-58, 54),     S(-36, 25),     S(-60, 28),     S(-97, 84),     S(-131, 73),    S(-145, 54),    //
    S(-109, -48),   S(29, -107),    S(-55, -19),    S(-71, -10),    S(-52, -39),    S(-132, 37),    S(-139, 12),    S(-163, 13),    //
    S(-142, 0),     S(-33, -93),    S(-13, -69),    S(-45, -44),    S(-50, -43),    S(-92, -14),    S(-141, -31),   S(-158, -43),   //
    S(-126, -27),   S(-86, 0),      S(-51, -34),    S(-25, -46),    S(-53, -21),    S(-63, -30),    S(-81, -46),    S(-111, -36),   //
};
inline const std::array<PScore, 64> QUEEN_PSQT = {
    S(-10, 31),     S(-17, 21),     S(-32, 152),    S(-107, 161),   S(-110, 148),   S(-153, 226),   S(-69, 77),     S(-110, 24),    //
    S(82, 57),      S(-147, 287),   S(-13, 248),    S(-198, 392),   S(-88, 253),    S(-168, 276),   S(-103, 129),   S(-37, 49),     //
    S(-61, 200),    S(54, 176),     S(72, 225),     S(-9, 256),     S(-64, 280),    S(-72, 233),    S(-16, 95),     S(-18, 23),     //
    S(48, 70),      S(33, 140),     S(6, 157),      S(-43, 261),    S(-46, 229),    S(-1, 97),      S(-15, 70),     S(-31, 57),     //
    S(16, 82),      S(70, 34),      S(-14, 189),    S(-11, 164),    S(-54, 173),    S(-47, 105),    S(9, -59),      S(-45, -6),     //
    S(61, -139),    S(50, -41),     S(27, 41),      S(-43, 99),     S(-7, 8),       S(-12, -35),    S(2, -83),      S(-18, -42),    //
    S(42, -247),    S(49, -293),    S(18, -140),    S(37, -92),     S(-16, -42),    S(26, -161),    S(-5, -111),    S(-62, -31),    //
    S(-131, -48),   S(-2, -444),    S(-22, -267),   S(-5, -220),    S(29, -157),    S(39, -223),    S(-13, -132),   S(-79, -42),    //
};
inline const std::array<PScore, 64> KING_PSQT = {
    S(474, -602),   S(436, -180),   S(-479, 160),   S(-499, 150),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(209, -72),    S(-142, 200),   S(-157, 232),   S(-12, 200),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-126, 62),    S(16, 151),     S(71, 136),     S(-30, 113),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-286, 64),    S(-129, 166),   S(48, 118),     S(-73, 108),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-261, 2),     S(-96, 84),     S(-20, 79),     S(-191, 142),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-173, -50),   S(36, -11),     S(-74, 51),     S(-159, 118),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(97, -134),    S(152, -66),    S(28, 4),       S(-98, 72),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(31, -238),    S(125, -174),   S(-16, -121),   S(22, -159),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
};

// clang-format on

}
