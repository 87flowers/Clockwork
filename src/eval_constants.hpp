#pragma once

#include "eval_types.hpp"

namespace Clockwork {

// clang-format off
// Epoch 70/1000
// [========================================] 100% (8/8)
inline const PScore PAWN_MAT   = S(145, 91);
inline const PScore KNIGHT_MAT = S(731, 774);
inline const PScore BISHOP_MAT = S(780, 621);
inline const PScore ROOK_MAT   = S(953, 871);
inline const PScore QUEEN_MAT  = S(2158, 1273);
inline const PScore TEMPO_VAL  = S(45, 13);

inline const PScore BISHOP_PAIR_VAL  = S(72, 189);
inline const PScore DOUBLED_PAWN_VAL = S(-59, -86);

inline const PScore POTENTIAL_CHECKER_VAL = S(-73, -1);

inline const std::array<PScore, 6> PAWN_PHALANX = {
    S(-1, 25), S(62, 31), S(90, 68), S(185, 159), S(523, 537), S(1733, 1510),
};
inline const std::array<PScore, 5> DEFENDED_PAWN = {
    S(46, 45), S(49, 20), S(56, 24), S(90, 98), S(632, -126),
};
inline const std::array<PScore, 6> PASSED_PAWN = {
    S(6, 1), S(-20, 34), S(-28, 76), S(48, 130), S(74, 231), S(198, 385),
};

inline const std::array<PScore, 9> KNIGHT_MOBILITY = {
    S(-32, -27), S(69, 21), S(131, 110), S(180, 139), S(235, 162), S(250, 193), S(289, 197), S(311, 206), S(359, 111),
};
inline const std::array<PScore, 14> BISHOP_MOBILITY = {
    S(37, -30), S(82, 56), S(147, 126), S(175, 190), S(195, 213), S(206, 246), S(229, 247), S(243, 264), S(241, 267), S(223, 255), S(284, 260), S(326, 209), S(375, 200), S(427, 164),
};
inline const std::array<PScore, 15> ROOK_MOBILITY = {
    S(101, 214), S(209, 407), S(264, 511), S(282, 498), S(297, 539), S(310, 553), S(328, 567), S(357, 545), S(378, 565), S(406, 567), S(435, 574), S(449, 578), S(494, 569), S(483, 568), S(575, 478),
};
inline const std::array<PScore, 28> QUEEN_MOBILITY = {
    S(0, 0), S(551, 487), S(532, 893), S(623, 970), S(646, 1014), S(691, 1023), S(657, 1221), S(687, 1193), S(707, 1234), S(704, 1268), S(717, 1285), S(708, 1302), S(734, 1298), S(749, 1296), S(752, 1290), S(777, 1295), S(758, 1311), S(768, 1264), S(804, 1266), S(832, 1207), S(862, 1161), S(886, 1112), S(1002, 1011), S(1175, 857), S(1149, 825), S(1623, 612), S(1428, 646), S(1478, 625),
};
inline const std::array<PScore, 9> KING_MOBILITY = {
    S(418, 373), S(85, 9), S(30, 58), S(26, 94), S(-2, 76), S(-29, 56), S(-4, 66), S(13, 32), S(55, -82),
};

inline const std::array<PScore, 3> KNIGHT_KING_RING = {
    CS(0, 0), S(81, -42), S(149, -85),
};
inline const std::array<PScore, 3> BISHOP_KING_RING = {
    CS(0, 0), S(29, 3), S(147, -43),
};
inline const std::array<PScore, 5> ROOK_KING_RING = {
    CS(0, 0), S(71, -66), S(87, -77), S(132, -75), S(122, -122),
};
inline const std::array<PScore, 6> QUEEN_KING_RING = {
    CS(0, 0), S(-51, 35), S(-69, 52), S(11, -29), S(173, -122), S(446, -296),
};

inline const PScore PAWN_THREAT_KNIGHT = S(188, 71);
inline const PScore PAWN_THREAT_BISHOP = S(161, 74);
inline const PScore PAWN_THREAT_ROOK   = S(160, 56);
inline const PScore PAWN_THREAT_QUEEN  = S(146, -53);

inline const PScore KNIGHT_THREAT_BISHOP = S(80, 62);
inline const PScore KNIGHT_THREAT_ROOK   = S(218, -15);
inline const PScore KNIGHT_THREAT_QUEEN  = S(131, -105);

inline const PScore BISHOP_THREAT_KNIGHT = S(65, 24);
inline const PScore BISHOP_THREAT_ROOK   = S(192, 19);
inline const PScore BISHOP_THREAT_QUEEN  = S(161, 30);

inline const std::array<PScore, 48> PAWN_PSQT = {
    S(-116, 495),   S(6, 504),      S(170, 427),    S(313, 209),    S(270, 225),    S(290, 320),    S(162, 361),    S(212, 352),    //
    S(150, 351),    S(335, 378),    S(254, 292),    S(295, 194),    S(211, 188),    S(156, 251),    S(109, 340),    S(90, 351),     //
    S(89, 285),     S(115, 296),    S(104, 246),    S(111, 208),    S(91, 211),     S(49, 216),     S(41, 300),     S(6, 314),      //
    S(107, 219),    S(126, 251),    S(84, 202),     S(92, 193),     S(79, 194),     S(39, 213),     S(-1, 283),     S(-14, 268),    //
    S(116, 186),    S(180, 187),    S(124, 226),    S(57, 236),     S(67, 214),     S(13, 219),     S(12, 259),     S(-29, 245),    //
    S(118, 182),    S(274, 179),    S(197, 221),    S(80, 254),     S(73, 214),     S(48, 229),     S(25, 276),     S(-10, 254),    //
};
inline const std::array<PScore, 64> KNIGHT_PSQT = {
    S(-323, -57),   S(-29, 8),      S(-420, 391),   S(77, 135),     S(-241, 246),   S(-243, 251),   S(-364, 104),   S(-484, 150),   //
    S(179, 61),     S(220, 131),    S(356, 4),      S(160, 144),    S(209, 102),    S(164, 85),     S(107, 109),    S(135, 48),     //
    S(184, 89),     S(125, 198),    S(349, 127),    S(209, 184),    S(279, 134),    S(166, 152),    S(168, 108),    S(69, 85),      //
    S(234, 120),    S(155, 163),    S(216, 177),    S(198, 193),    S(206, 146),    S(207, 167),    S(133, 105),    S(129, 105),    //
    S(216, 113),    S(226, 105),    S(213, 168),    S(179, 142),    S(184, 151),    S(188, 169),    S(137, 106),    S(135, -6),     //
    S(124, 40),     S(170, 52),     S(134, 51),     S(141, 111),    S(177, 123),    S(87, 70),      S(89, 49),      S(60, 64),      //
    S(133, 151),    S(175, 47),     S(134, 56),     S(120, 90),     S(102, 70),     S(90, 48),      S(97, 4),       S(-18, -38),    //
    S(91, 43),      S(117, 48),     S(181, -36),    S(150, 38),     S(194, 30),     S(131, -73),    S(69, 24),      S(-46, -1),     //
};
inline const std::array<PScore, 64> BISHOP_PSQT = {
    S(26, 278),     S(49, 203),     S(-457, 301),   S(-175, 293),   S(-209, 327),   S(-263, 311),   S(99, 263),     S(58, 249),     //
    S(115, 129),    S(118, 259),    S(106, 250),    S(148, 195),    S(145, 216),    S(123, 243),    S(106, 223),    S(58, 251),     //
    S(122, 253),    S(188, 257),    S(398, 222),    S(243, 215),    S(188, 226),    S(127, 277),    S(234, 222),    S(102, 278),    //
    S(128, 222),    S(139, 257),    S(252, 230),    S(246, 235),    S(235, 248),    S(171, 277),    S(151, 226),    S(76, 240),     //
    S(136, 173),    S(151, 218),    S(161, 234),    S(195, 246),    S(192, 261),    S(133, 262),    S(137, 190),    S(136, 123),    //
    S(174, 168),    S(225, 187),    S(213, 178),    S(142, 239),    S(148, 254),    S(127, 244),    S(187, 185),    S(148, 120),    //
    S(135, 125),    S(219, 158),    S(155, 158),    S(142, 210),    S(134, 169),    S(152, 144),    S(112, 214),    S(173, 83),     //
    S(182, 174),    S(120, 178),    S(127, 188),    S(133, 156),    S(115, 141),    S(145, 187),    S(152, 122),    S(52, 188),     //
};
inline const std::array<PScore, 64> ROOK_PSQT = {
    S(432, 404),    S(482, 414),    S(435, 443),    S(390, 470),    S(415, 420),    S(373, 433),    S(398, 425),    S(411, 431),    //
    S(435, 448),    S(490, 441),    S(552, 418),    S(477, 454),    S(466, 466),    S(383, 494),    S(366, 482),    S(369, 460),    //
    S(368, 443),    S(604, 383),    S(575, 393),    S(583, 360),    S(486, 412),    S(398, 448),    S(459, 416),    S(302, 458),    //
    S(319, 421),    S(376, 420),    S(381, 416),    S(464, 358),    S(412, 380),    S(361, 448),    S(326, 442),    S(236, 437),    //
    S(201, 402),    S(319, 382),    S(310, 402),    S(309, 410),    S(300, 396),    S(282, 474),    S(213, 455),    S(189, 426),    //
    S(198, 378),    S(314, 298),    S(280, 326),    S(253, 337),    S(287, 332),    S(195, 402),    S(208, 389),    S(193, 347),    //
    S(141, 383),    S(226, 331),    S(274, 307),    S(289, 351),    S(272, 360),    S(248, 346),    S(185, 317),    S(195, 322),    //
    S(179, 375),    S(212, 383),    S(258, 342),    S(299, 330),    S(280, 348),    S(274, 351),    S(262, 348),    S(222, 355),    //
};
inline const std::array<PScore, 64> QUEEN_PSQT = {
    S(539, 816),    S(518, 800),    S(602, 772),    S(375, 962),    S(478, 859),    S(410, 882),    S(521, 783),    S(475, 753),    //
    S(572, 781),    S(409, 982),    S(427, 1045),   S(356, 1037),   S(396, 968),    S(339, 1017),   S(413, 866),    S(480, 751),    //
    S(455, 908),    S(583, 883),    S(542, 935),    S(453, 997),    S(464, 914),    S(408, 966),    S(503, 842),    S(449, 722),    //
    S(532, 804),    S(504, 885),    S(507, 903),    S(488, 963),    S(477, 942),    S(477, 869),    S(491, 778),    S(461, 784),    //
    S(503, 825),    S(542, 816),    S(504, 859),    S(486, 902),    S(466, 909),    S(473, 882),    S(453, 760),    S(472, 709),    //
    S(532, 583),    S(537, 705),    S(511, 780),    S(440, 858),    S(490, 777),    S(479, 803),    S(503, 671),    S(471, 663),    //
    S(535, 460),    S(517, 430),    S(502, 614),    S(510, 690),    S(462, 721),    S(522, 586),    S(504, 691),    S(468, 701),    //
    S(369, 658),    S(361, 431),    S(453, 423),    S(484, 522),    S(521, 618),    S(542, 510),    S(532, 544),    S(465, 656),    //
};
inline const std::array<PScore, 64> KING_PSQT = {
    S(386, -693),   S(188, -96),    S(0, -31),      S(-122, 57),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(314, -158),   S(8, 131),      S(-103, 175),   S(289, 68),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-43, 54),     S(68, 177),     S(126, 134),    S(231, 60),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-283, 83),    S(-45, 149),    S(89, 137),     S(67, 82),      S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-253, 31),    S(-74, 104),    S(-12, 109),    S(-75, 148),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-201, -12),   S(1, 11),       S(-97, 84),     S(-144, 126),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(19, -85),     S(58, -24),     S(-67, 37),     S(-184, 103),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-94, -164),   S(4, -115),     S(-129, -70),   S(-86, -97),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
};
// Average batch loss: 0.0736722
// clang-format on

}
