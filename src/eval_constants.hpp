#pragma once

#include "eval_types.hpp"

namespace Clockwork {

// clang-format off

inline const PScore PAWN_MAT   = S(287, 448);
inline const PScore KNIGHT_MAT = S(999, 999);
inline const PScore BISHOP_MAT = S(1017, 1063);
inline const PScore ROOK_MAT   = S(1522, 1803);
inline const PScore QUEEN_MAT  = S(3321, 3283);
inline const PScore TEMPO_VAL  = S(34, 16);

inline const PScore BISHOP_PAIR_VAL  = S(79, 193);
inline const PScore DOUBLED_PAWN_VAL = S(-49, -79);

inline const PScore POTENTIAL_CHECKER_VAL = S(-73, -2);
inline const std::array<PScore, 6> PAWN_PHALANX = {
    S(0, 21), S(54, 25), S(80, 70), S(184, 149), S(511, 553), S(1771, 1460),
};
inline const std::array<PScore, 5> DEFENDED_PAWN = {
    S(45, 46), S(49, 21), S(55, 36), S(100, 110), S(638, -125),
};
inline const std::array<PScore, 6> PASSED_PAWN = {
    S(4, 0), S(-20, 33), S(-27, 82), S(45, 131), S(72, 233), S(33, 33),
};

inline const std::array<PScore, 9> KNIGHT_MOBILITY = {
    S(-210, -177), S(-100, -131), S(-45, -36), S(5, -11), S(53, 10), S(73, 53), S(107, 48), S(130, 47), S(185, -37),
};
inline const std::array<PScore, 14> BISHOP_MOBILITY = {
    S(-118, -289), S(-69, -185), S(-9, -117), S(4, -60), S(41, -29), S(55, -7), S(77, 3), S(83, 16), S(88, 25), S(90, 22), S(119, 7), S(161, -40), S(198, -46), S(258, -67),
};
inline const std::array<PScore, 15> ROOK_MOBILITY = {
    S(-200, -325), S(-85, -116), S(-37, -40), S(-15, -48), S(-4, -8), S(11, 9), S(30, 14), S(56, 12), S(81, 22), S(110, 28), S(135, 29), S(148, 34), S(192, 20), S(184, 19), S(275, -69),
};
inline const std::array<PScore, 28> QUEEN_MOBILITY = {
    S(68, 102), S(-632, 540), S(-225, -395), S(-155, -250), S(-122, -219), S(-74, -208), S(-109, -13), S(-90, -41), S(-74, -7), S(-74, 19), S(-60, 30), S(-61, 67), S(-39, 52), S(-27, 51), S(-20, 57), S(-2, 45), S(-18, 66), S(7, 24), S(18, 21), S(54, -41), S(90, -80), S(107, -134), S(230, -233), S(411, -398), S(389, -420), S(943, -698), S(724, -648), S(1364, -984),
};
inline const std::array<PScore, 9> KING_MOBILITY = {
    S(392, 819), S(81, 451), S(17, 493), S(18, 519), S(0, 509), S(-25, 492), S(-4, 497), S(5, 465), S(53, 343),
};

inline const std::array<PScore, 3> KNIGHT_KING_RING = {
    CS(0, 0), S(87, -37), S(157, -90),
};
inline const std::array<PScore, 3> BISHOP_KING_RING = {
    CS(0, 0), S(18, 3), S(126, -39),
};
inline const std::array<PScore, 5> ROOK_KING_RING = {
    CS(0, 0), S(66, -63), S(84, -77), S(134, -77), S(135, -122),
};
inline const std::array<PScore, 6> QUEEN_KING_RING = {
    CS(0, 0), S(-50, 32), S(-73, 51), S(10, -28), S(170, -121), S(444, -287),
};

inline const PScore PAWN_THREAT_KNIGHT = S(179, 73);
inline const PScore PAWN_THREAT_BISHOP = S(162, 65);
inline const PScore PAWN_THREAT_ROOK = S(136, 52);
inline const PScore PAWN_THREAT_QUEEN = S(110, -56);
inline const std::array<PScore, 48> PAWN_PSQT = {
    S(-114, 490),   S(8, 505),      S(173, 432),    S(334, 211),    S(275, 232),    S(298, 317),    S(169, 370),    S(222, 356),    //
    S(10, 1),       S(184, 24),     S(115, -57),    S(144, -159),   S(70, -161),    S(18, -85),     S(-29, -4),     S(-56, -8),     //
    S(-50, -62),    S(-26, -59),    S(-32, -103),   S(-37, -137),   S(-53, -136),   S(-96, -135),   S(-111, -62),   S(-136, -41),   //
    S(-39, -140),   S(-17, -103),   S(-51, -148),   S(-50, -151),   S(-70, -160),   S(-102, -138),  S(-143, -67),   S(-158, -86),   //
    S(-36, -173),   S(30, -169),    S(-31, -129),   S(-90, -116),   S(-81, -138),   S(-134, -133),  S(-139, -105),  S(-174, -106),  //
    S(-29, -176),   S(125, -172),   S(44, -133),    S(-56, -92),    S(-75, -145),   S(-99, -127),   S(-115, -83),   S(-152, -101),  //
};
inline const std::array<PScore, 64> KNIGHT_PSQT = {
    S(-432, -148),  S(-95, -64),    S(-539, 319),   S(-16, 54),     S(-362, 167),   S(-346, 176),   S(-433, 2),     S(-585, 70),    //
    S(93, -16),     S(119, 57),     S(292, -88),    S(66, 76),      S(144, 32),     S(107, -4),     S(-11, 26),     S(42, -41),     //
    S(48, 27),      S(40, 114),     S(243, 58),     S(138, 96),     S(193, 49),     S(61, 68),      S(81, 20),      S(-51, 10),     //
    S(125, 47),     S(43, 104),     S(100, 103),    S(68, 127),     S(89, 81),      S(80, 88),      S(10, 30),      S(22, 45),      //
    S(92, 25),      S(112, 34),     S(81, 83),      S(48, 70),      S(48, 85),      S(56, 87),      S(17, 27),      S(34, -65),     //
    S(-5, -23),     S(30, -30),     S(8, -18),      S(32, 52),      S(51, 50),      S(-32, 2),      S(-20, -10),    S(-68, -11),    //
    S(16, 82),      S(47, -28),     S(0, -19),      S(-10, 8),      S(-18, 0),      S(-33, -33),    S(-17, -59),    S(-118, -110),  //
    S(-39, -16),    S(2, -19),      S(60, -103),    S(36, -27),     S(69, -42),     S(11, -147),    S(-45, -47),    S(-160, -60),   //
};
inline const std::array<PScore, 64> BISHOP_PSQT = {
    S(-81, 109),    S(-60, 30),     S(-570, 134),   S(-264, 120),   S(-319, 139),   S(-369, 137),   S(-4, 75),      S(-38, 58),     //
    S(25, -43),     S(52, 62),      S(38, 57),      S(95, -1),      S(61, 26),      S(24, 54),      S(28, 35),      S(-57, 55),     //
    S(30, 72),      S(88, 72),      S(304, 29),     S(156, 31),     S(110, 40),     S(50, 84),      S(147, 32),     S(2, 91),       //
    S(25, 28),      S(72, 61),      S(155, 38),     S(155, 50),     S(156, 59),     S(72, 78),      S(79, 40),      S(-28, 60),     //
    S(38, -19),     S(45, 44),      S(55, 46),      S(108, 53),     S(110, 86),     S(28, 80),      S(50, 11),      S(39, -56),     //
    S(71, -31),     S(102, 6),      S(104, 9),      S(26, 60),      S(23, 68),      S(17, 77),      S(76, 12),      S(49, -49),     //
    S(27, -51),     S(102, -21),    S(50, -19),     S(23, 26),      S(15, -5),      S(56, -25),     S(-4, 18),      S(72, -110),    //
    S(59, -14),     S(22, 5),       S(13, 19),      S(18, -36),     S(2, -33),      S(22, 4),       S(38, -66),     S(-43, 16),     //
};
inline const std::array<PScore, 64> ROOK_PSQT = {
    S(120, 32),     S(172, 44),     S(114, 76),     S(73, 96),      S(110, 59),     S(69, 56),      S(88, 58),      S(95, 59),      //
    S(123, 75),     S(174, 67),     S(237, 47),     S(165, 94),     S(152, 96),     S(71, 110),     S(39, 106),     S(61, 95),      //
    S(48, 73),      S(294, 16),     S(251, 23),     S(272, -1),     S(171, 42),     S(82, 73),      S(140, 40),     S(-10, 91),     //
    S(16, 51),      S(61, 53),      S(83, 49),      S(126, -7),     S(92, 27),      S(34, 79),      S(12, 74),      S(-67, 67),     //
    S(-118, 16),    S(5, 9),        S(-8, 25),      S(-13, 29),     S(-10, 18),     S(-48, 78),     S(-94, 78),     S(-116, 55),    //
    S(-110, 5),     S(4, -75),      S(-18, -32),    S(-55, -10),    S(-18, -35),    S(-112, 29),    S(-105, 8),     S(-106, -6),    //
    S(-168, 20),    S(-83, -43),    S(-35, -54),    S(-32, -39),    S(-50, -21),    S(-58, -22),    S(-112, -33),   S(-115, -34),   //
    S(-123, 3),     S(-95, 13),     S(-51, -25),    S(-15, -40),    S(-27, -22),    S(-36, -26),    S(-53, -39),    S(-82, -21),    //
};
inline const std::array<PScore, 64> QUEEN_PSQT = {
    S(64, 80),      S(56, 74),      S(105, 52),     S(-100, 240),   S(-4, 126),     S(-56, 154),    S(41, 48),      S(-4, 24),      //
    S(94, 56),      S(-77, 248),    S(-61, 323),    S(-119, 304),   S(-89, 243),    S(-144, 269),   S(-63, 139),    S(-5, 25),      //
    S(-35, 183),    S(94, 164),     S(50, 205),     S(-29, 280),    S(-20, 192),    S(-83, 228),    S(15, 102),     S(-7, 10),      //
    S(49, 79),      S(23, 161),     S(27, 175),     S(-3, 239),     S(-14, 216),    S(-8, 135),     S(6, 52),       S(-18, 46),     //
    S(29, 99),      S(51, 76),      S(28, 126),     S(-5, 181),     S(-19, 184),    S(-22, 142),    S(-17, 43),     S(-11, -28),    //
    S(57, -139),    S(60, -24),     S(39, 64),      S(-39, 128),    S(8, 47),       S(-5, 64),      S(29, -59),     S(-2, -56),     //
    S(62, -267),    S(41, -305),    S(21, -121),    S(38, -39),     S(-6, 3),       S(53, -136),    S(28, -41),     S(-14, -38),    //
    S(-86, -67),    S(-84, -334),   S(-23, -298),   S(11, -201),    S(41, -116),    S(67, -221),    S(47, -170),    S(-5, -77),     //
};
inline const std::array<PScore, 64> KING_PSQT = {
    S(470, -732),   S(256, -119),   S(11, -33),     S(-114, 41),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(367, -170),   S(46, 128),     S(-48, 156),    S(321, 60),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(3, 36),       S(119, 157),    S(172, 118),    S(271, 46),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-232, 66),    S(6, 122),      S(144, 117),    S(124, 76),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-192, 3),     S(-29, 74),     S(28, 80),      S(-20, 123),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-138, -36),   S(69, -6),      S(-38, 63),     S(-84, 107),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(81, -117),    S(116, -45),    S(0, 25),       S(-118, 87),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-30, -181),   S(73, -138),    S(-59, -95),    S(-28, -123),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
};
// clang-format on

}
