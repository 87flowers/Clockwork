#pragma once

#include "eval_types.hpp"

namespace Clockwork {

// clang-format off
inline const PScore PAWN_MAT   = S(161, 86);
inline const PScore KNIGHT_MAT = S(800, 402);
inline const PScore BISHOP_MAT = S(981, 474);
inline const PScore ROOK_MAT   = S(1105, 694);
inline const PScore QUEEN_MAT  = S(1874, 993);
inline const PScore TEMPO_VAL  = S(81, 4);

inline const PScore BISHOP_PAIR_VAL  = S(105, 172);
inline const PScore DOUBLED_PAWN_VAL = S(-51, -84);

inline const PScore POTENTIAL_CHECKER_VAL = S(-74, -6);

inline const std::array<PScore, 6> PAWN_PHALANX = {
    S(25, 22), S(64, 39), S(85, 84), S(182, 184), S(689, 412), S(1051, 1423),
};
inline const std::array<PScore, 5> DEFENDED_PAWN = {
    S(74, 37), S(68, 28), S(82, 55), S(239, 59), S(675, 15),
};
inline const std::array<PScore, 6> PASSED_PAWN = {
    S(-6, 22), S(-18, 46), S(-4, 99), S(27, 151), S(89, 255), S(224, 322),
};

inline const std::array<PScore, 9> KNIGHT_MOBILITY = {
    S(248, 27), S(315, 177), S(381, 261), S(426, 298), S(477, 316), S(514, 342), S(563, 326), S(599, 317), S(657, 235),
};
inline const std::array<PScore, 14> BISHOP_MOBILITY = {
    S(91, 43), S(169, 134), S(232, 165), S(268, 205), S(305, 235), S(332, 263), S(346, 272), S(361, 275), S(377, 281), S(387, 270), S(409, 250), S(468, 200), S(466, 202), S(544, 143),
};
inline const std::array<PScore, 15> ROOK_MOBILITY = {
    S(263, 228), S(417, 485), S(489, 539), S(524, 555), S(572, 579), S(601, 595), S(628, 614), S(655, 608), S(687, 611), S(717, 619), S(756, 613), S(789, 610), S(825, 600), S(857, 582), S(1090, 400),
};
inline const std::array<PScore, 28> QUEEN_MOBILITY = {
    S(455, 151), S(1088, 737), S(1303, 684), S(1356, 592), S(1372, 648), S(1384, 746), S(1399, 835), S(1418, 883), S(1429, 931), S(1446, 943), S(1455, 966), S(1462, 990), S(1476, 992), S(1478, 1010), S(1489, 1006), S(1484, 1020), S(1508, 980), S(1520, 969), S(1546, 937), S(1566, 902), S(1628, 830), S(1675, 766), S(1750, 704), S(1859, 586), S(1952, 491), S(2118, 368), S(1968, 400), S(1531, 736),
};
inline const std::array<PScore, 9> KING_MOBILITY = {
    S(-27, 199), S(175, -78), S(74, -5), S(28, 38), S(-2, 27), S(-24, 0), S(-12, 2), S(-28, -30), S(-36, -96),
};

inline const std::array<PScore, 3> KNIGHT_KING_RING = {
    CS(0, 0), S(76, -25), S(140, -66),
};
inline const std::array<PScore, 3> BISHOP_KING_RING = {
    CS(0, 0), S(32, -8), S(128, -39),
};
inline const std::array<PScore, 5> ROOK_KING_RING = {
    CS(0, 0), S(72, -41), S(80, -91), S(113, -71), S(109, -103),
};
inline const std::array<PScore, 6> QUEEN_KING_RING = {
    CS(0, 0), S(-49, 56), S(-75, 77), S(-38, 28), S(134, -81), S(422, -278),
};

inline const PScore PAWN_THREAT_KNIGHT = S(275, 61);
inline const PScore PAWN_THREAT_BISHOP = S(268, 105);
inline const PScore PAWN_THREAT_ROOK   = S(271, 71);
inline const PScore PAWN_THREAT_QUEEN  = S(216, 3);

inline const PScore KNIGHT_THREAT_BISHOP = S(136, 58);
inline const PScore KNIGHT_THREAT_ROOK   = S(276, -24);
inline const PScore KNIGHT_THREAT_QUEEN  = S(174, -35);

inline const PScore BISHOP_THREAT_KNIGHT = S(100, 35);
inline const PScore BISHOP_THREAT_ROOK   = S(238, 61);
inline const PScore BISHOP_THREAT_QUEEN  = S(215, 119);

inline const std::array<PScore, 48> PAWN_PSQT = {
    S(250, 398),    S(248, 449),    S(258, 423),    S(292, 329),    S(310, 241),    S(210, 314),    S(273, 371),    S(320, 348),    //
    S(230, 282),    S(286, 304),    S(309, 248),    S(304, 173),    S(289, 134),    S(217, 209),    S(199, 254),    S(144, 285),    //
    S(144, 241),    S(201, 231),    S(224, 185),    S(214, 166),    S(194, 158),    S(138, 186),    S(124, 231),    S(85, 251),     //
    S(122, 183),    S(173, 194),    S(202, 157),    S(193, 156),    S(174, 145),    S(128, 174),    S(75, 222),     S(42, 217),     //
    S(120, 149),    S(211, 140),    S(168, 172),    S(153, 181),    S(118, 179),    S(82, 188),     S(60, 212),     S(45, 188),     //
    S(120, 154),    S(272, 150),    S(237, 178),    S(185, 204),    S(135, 206),    S(121, 206),    S(118, 217),    S(41, 208),     //
};
inline const std::array<PScore, 64> KNIGHT_PSQT = {
    S(-226, 65),    S(-58, 167),    S(-494, 391),   S(288, 89),     S(125, 140),    S(-336, 213),   S(-228, 202),   S(-346, 134),   //
    S(100, 150),    S(159, 168),    S(275, 116),    S(401, 3),      S(347, 68),     S(220, 120),    S(106, 162),    S(59, 165),     //
    S(234, 142),    S(228, 180),    S(390, 150),    S(360, 178),    S(338, 175),    S(273, 192),    S(247, 128),    S(194, 127),    //
    S(304, 137),    S(268, 180),    S(309, 204),    S(304, 227),    S(300, 224),    S(273, 206),    S(224, 179),    S(252, 134),    //
    S(289, 137),    S(276, 150),    S(306, 175),    S(274, 203),    S(283, 193),    S(252, 205),    S(263, 130),    S(230, 143),    //
    S(188, 109),    S(244, 106),    S(206, 143),    S(241, 172),    S(246, 172),    S(174, 162),    S(191, 111),    S(143, 108),    //
    S(197, 112),    S(198, 105),    S(197, 107),    S(212, 124),    S(177, 142),    S(172, 95),     S(158, 113),    S(127, 22),     //
    S(84, 134),     S(178, 133),    S(204, 71),     S(228, 82),     S(214, 81),     S(159, 49),     S(154, 107),    S(16, 69),      //
};
inline const std::array<PScore, 64> BISHOP_PSQT = {
    S(178, 180),    S(30, 229),     S(-333, 280),   S(69, 202),     S(-26, 245),    S(-118, 258),   S(-32, 322),    S(84, 254),     //
    S(153, 201),    S(149, 220),    S(246, 180),    S(184, 167),    S(145, 204),    S(186, 199),    S(189, 192),    S(144, 198),    //
    S(263, 154),    S(318, 196),    S(382, 190),    S(378, 177),    S(339, 184),    S(302, 202),    S(278, 174),    S(225, 143),    //
    S(244, 140),    S(267, 199),    S(329, 201),    S(322, 237),    S(365, 209),    S(291, 188),    S(252, 192),    S(204, 158),    //
    S(257, 120),    S(266, 171),    S(295, 191),    S(327, 210),    S(310, 221),    S(268, 211),    S(225, 180),    S(227, 124),    //
    S(248, 148),    S(320, 145),    S(319, 151),    S(266, 206),    S(273, 195),    S(249, 200),    S(302, 159),    S(222, 146),    //
    S(240, 134),    S(311, 114),    S(264, 141),    S(255, 150),    S(224, 157),    S(257, 133),    S(262, 124),    S(265, 94),     //
    S(229, 154),    S(158, 183),    S(229, 173),    S(214, 129),    S(216, 109),    S(257, 154),    S(245, 100),    S(204, 145),    //
};
inline const std::array<PScore, 64> ROOK_PSQT = {
    S(551, 272),    S(522, 296),    S(497, 315),    S(522, 298),    S(536, 276),    S(477, 303),    S(504, 294),    S(522, 297),    //
    S(437, 334),    S(427, 338),    S(589, 290),    S(601, 265),    S(631, 240),    S(524, 297),    S(416, 334),    S(422, 330),    //
    S(368, 336),    S(503, 282),    S(576, 255),    S(618, 213),    S(587, 219),    S(504, 269),    S(473, 280),    S(401, 321),    //
    S(330, 315),    S(367, 318),    S(475, 276),    S(484, 255),    S(487, 256),    S(422, 300),    S(388, 305),    S(337, 315),    //
    S(263, 283),    S(308, 286),    S(344, 287),    S(364, 270),    S(366, 269),    S(345, 298),    S(292, 305),    S(262, 316),    //
    S(213, 249),    S(298, 229),    S(301, 233),    S(317, 240),    S(310, 245),    S(278, 274),    S(286, 256),    S(228, 278),    //
    S(125, 275),    S(243, 209),    S(288, 215),    S(317, 210),    S(306, 220),    S(308, 225),    S(283, 211),    S(227, 235),    //
    S(192, 255),    S(179, 299),    S(300, 218),    S(372, 180),    S(328, 216),    S(319, 231),    S(296, 229),    S(254, 249),    //
};
inline const std::array<PScore, 64> QUEEN_PSQT = {
    S(1203, 839),   S(1278, 806),   S(1249, 836),   S(1262, 864),   S(1241, 858),   S(1228, 854),   S(1218, 828),   S(1125, 869),   //
    S(1226, 878),   S(1140, 987),   S(1221, 998),   S(1071, 1074),  S(1089, 1037),  S(1110, 996),   S(1105, 943),   S(1161, 850),   //
    S(1172, 911),   S(1244, 967),   S(1213, 1013),  S(1219, 976),   S(1143, 1006),  S(1163, 955),   S(1179, 910),   S(1161, 804),   //
    S(1262, 806),   S(1180, 944),   S(1195, 971),   S(1194, 981),   S(1178, 977),   S(1156, 933),   S(1168, 887),   S(1194, 775),   //
    S(1199, 831),   S(1216, 852),   S(1215, 874),   S(1195, 921),   S(1183, 924),   S(1176, 880),   S(1178, 824),   S(1219, 719),   //
    S(1196, 704),   S(1235, 733),   S(1236, 792),   S(1203, 799),   S(1225, 767),   S(1202, 811),   S(1227, 722),   S(1190, 738),   //
    S(1182, 539),   S(1229, 460),   S(1228, 568),   S(1248, 641),   S(1230, 674),   S(1261, 599),   S(1239, 625),   S(1237, 631),   //
    S(1202, 506),   S(1142, 355),   S(1116, 517),   S(1202, 529),   S(1254, 549),   S(1253, 514),   S(1256, 530),   S(1200, 623),   //
};
inline const std::array<PScore, 64> KING_PSQT = {
    S(-201, -298),  S(229, -101),   S(339, -233),   S(118, -381),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(184, -121),   S(211, 141),    S(112, 176),    S(93, 148),     S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-54, 47),     S(57, 228),     S(43, 210),     S(-55, 192),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-197, 47),    S(21, 158),     S(6, 182),      S(-128, 215),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-281, 39),    S(-57, 125),    S(-94, 167),    S(-177, 209),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-155, 2),     S(20, 69),      S(-92, 137),    S(-141, 187),   S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(81, -108),    S(106, 14),     S(24, 78),      S(-88, 138),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
    S(-38, -182),   S(97, -117),    S(-50, -47),    S(-47, -52),    S(0, 0),        S(0, 0),        S(0, 0),        S(0, 0),        //
};
// clang-format on

}
